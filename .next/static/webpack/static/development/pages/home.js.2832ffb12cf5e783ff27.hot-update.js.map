{"version":3,"file":"static/webpack/static\\development\\pages\\home.js.2832ffb12cf5e783ff27.hot-update.js","sources":["webpack:///./component/home/main/postlist/list/features-comment.js"],"sourcesContent":["import React,{useState} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {ADD} from '../../redux/action'\r\n\r\n\r\nconst  FeaturesComment = React.forwardRef((props, ref) => {\r\n      const [message, setMessage] = useState(''); \r\n      const [commentList,setCommentList] = useState(props.comment);\r\n\r\n      const addComment = async (e) => {    // Ê∑ªÂä†ËØÑËÆ∫‰∫ã‰ª∂\r\n        e.preventDefault();\r\n        let commentData = new FormData()\r\n        commentData.append('comment',message);\r\n        let request = await  fetch(`http://localhost:3001/post/comment/${props.id}`,{\r\n            method:'POST',\r\n            body:commentData,    \r\n            credentials: \"include\",        \r\n        })\r\n        let res = await request.json();\r\n        if(typeof res == 'object') {\r\n            setCommentList(res)\r\n        }\r\n    }\r\n    const inputEv = (e) => {\r\n        if(e.target.value.length>0){\r\n             ref.current.children[1].classList.add('pink');\r\n        }else{\r\n            ref.current.children[1].classList.remove('pink');\r\n        }\r\n        setMessage(e.target.value)\r\n    }\r\n    return (\r\n        <div className=\"comment-list\">\r\n               <ul>\r\n                   {commentList.map(e => <li>{e.comment}üíó</li>)}\r\n                   {/* <li> ÌïëÌÅ¨ üíó</li>\r\n                   <li> so beautiful</li>\r\n                   <li> ÌïëÌÅ¨ üíó</li>\r\n                   <li> YA ALLAHHH DEKET BANGETTTT</li>\r\n                   <li> ÌïëÌÅ¨ üíó</li> */}\r\n               </ul>\r\n               <form ref={ref} onSubmit= {addComment} hidden >\r\n                   <input type=\"text\" name=\"comment\" \r\n                     onInput={inputEv}\r\n                     value ={ message }\r\n                     required\r\n                     placeholder='ËæìÂÖ•ÂÜÖÂÆπ'\r\n                     />\r\n                     <div className=\"button\" onClick={(e) => {\r\n                            e.target.closest('.button').nextElementSibling.click();\r\n                         }}>\r\n                         <i className='iconfont icon-send'></i>\r\n                     </div>\r\n                     <input type=\"submit\" value=\"add\" hidden/>\r\n               </form>\r\n               <style jsx>\r\n                   {`                  \r\n                  .button {                      \r\n                      flex:1;\r\n                      display:flex;\r\n                      justify-content:center;\r\n                      align-items:center;\r\n                      border-radius:50%;\r\n                  }\r\n                  .button:hover>i {\r\n                      transform:scale(1.1);\r\n                      background:#1a79ff;\r\n                      color:white;\r\n                  }\r\n                  .button>i {\r\n                      font-size:1.6rem; \r\n                      padding:10px;\r\n                      border-radius:50%;                     \r\n                  }\r\n                  form {\r\n                      width:100%;\r\n                      height:6vh;\r\n                      background:white;                     \r\n                      border-radius:24px;\r\n                      margin:4vh 0 0 ;                \r\n                      display:none;\r\n                  }  \r\n                  input[type=submit] {\r\n                    color:white;\r\n                  }\r\n\r\n                  form>input {\r\n                      flex:9;\r\n                      text-align:center;\r\n                      height:100%;                      \r\n                      border: 2px solid #f4f6f8;\r\n                      font-size:3vh;\r\n                      padding:0 2vh;\r\n                      outline:none;\r\n                  }\r\n                  input[type=text] {\r\n                      color:white;\r\n                  }\r\n                  form>input:focus {\r\n                      background:#eeeef4;\r\n                  }\r\n                  .comment-list {\r\n                      width:100%;\r\n                      margin:4vh 0 2vh ;\r\n                  } \r\n                  ul {\r\n                      width:80%;\r\n                      margin-left:10%;\r\n                      list-style:none;\r\n                  }\r\n                  li {\r\n                      width:100%;\r\n                      height:2vh;\r\n                      margin:1vh;\r\n                      text-align:center;\r\n                  }\r\n                   `}\r\n               </style>\r\n        </div>\r\n    )\r\n    })\r\nconst dispatchToProps = dispatch => ({\r\n    Click(post) {\r\n        dispatch(ADD(post))\r\n    }\r\n})\r\nconst stateToProps = state => ({       });\r\n\r\n\r\n\r\n\r\nexport default  connect(null,dispatchToProps,null,{forwardRef: true})(FeaturesComment)\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAGA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAKA;AACA;AACA;AAHA;AACA;AALA;AAIA;AAJA;AAAA;AACA;AADA;AASA;AACA;AAAA;AACA;AACA;AACA;AAbA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AArBA;AAAA;AAAA;AAwFA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AACA;AAIA;AAAA;AAAA;AACA;AAIA;AAAA;AAAA;;;;A","sourceRoot":""}