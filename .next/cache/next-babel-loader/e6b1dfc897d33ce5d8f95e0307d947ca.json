{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport Top from './top';\nimport Bottom from './bottom';\nimport Loading from '../public/loading';\n\nfunction Index(_ref) {\n  var acc = _ref.acc;\n  console.log(acc);\n\n  var _useState = useState(null),\n      state = _useState[0],\n      setState = _useState[1];\n\n  var _useState2 = useState(false),\n      error = _useState2[0],\n      setError = _useState2[1];\n\n  useEffect(function () {\n    (function _callee() {\n      var req, result;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(fetch(\"http://localhost:3001/login/user/\".concat(acc)));\n\n            case 2:\n              req = _context.sent;\n\n              if (!req.ok) {\n                _context.next = 11;\n                break;\n              }\n\n              _context.next = 6;\n              return _regeneratorRuntime.awrap(req.json());\n\n            case 6:\n              result = _context.sent;\n              console.log(result);\n              setState(result);\n              _context.next = 12;\n              break;\n\n            case 11:\n              setError(true);\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n\n  if (state) {\n    return __jsx(React.Fragment, null, __jsx(Top, {\n      data: state\n    }), __jsx(Bottom, {\n      count: state.all\n    }));\n  } else {\n    return __jsx(Loading, {\n      color: \"#1f2738\"\n    });\n  }\n}\n\nexport default Index;","map":null,"metadata":{},"sourceType":"module"}