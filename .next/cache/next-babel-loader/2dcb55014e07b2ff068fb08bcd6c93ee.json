{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport Acthor from './acthor';\nimport Photo from './photoList';\nimport Title from './title';\nimport Form from './form';\nimport Comment from './comment';\nimport Loading from '../public/loading';\n\nfunction Root(_ref) {\n  var id = _ref.id;\n\n  var _useState = useState(null),\n      data = _useState[0],\n      setData = _useState[1];\n\n  var _useState2 = useState(true),\n      fetching = _useState2[0],\n      setFetching = _useState2[1];\n\n  var _useState3 = useState(false),\n      error = _useState3[0],\n      setError = _useState3[1];\n\n  console.log(id);\n  useEffect(function () {\n    //获取帖子信息\n    (function _callee() {\n      var url, req, result;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              url = 'http://49.234.96.80:3001/post/post/' + id;\n              console.log(url);\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(fetch(url));\n\n            case 5:\n              req = _context.sent;\n\n              if (!req.ok) {\n                _context.next = 14;\n                break;\n              }\n\n              _context.next = 9;\n              return _regeneratorRuntime.awrap(req.json());\n\n            case 9:\n              result = _context.sent;\n              setData(result);\n              setFetching(false);\n              _context.next = 16;\n              break;\n\n            case 14:\n              if (!(req.status == 404)) {\n                _context.next = 16;\n                break;\n              }\n\n              throw new Error('未找到这个帖子的信息');\n\n            case 16:\n              _context.next = 21;\n              break;\n\n            case 18:\n              _context.prev = 18;\n              _context.t0 = _context[\"catch\"](0);\n\n              if (_context.t0) {\n                console.log(_context.t0);\n                setError(true);\n              }\n\n            case 21:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 18]], Promise);\n    })();\n  }, []);\n  return __jsx(React.Fragment, null, data ? __jsx(React.Fragment, null, __jsx(Acthor, {\n    id: data.acthorPhotoId,\n    time: data.postTime,\n    acthor: data.userName\n  }), __jsx(Photo, {\n    message: data.message\n  }), __jsx(Title, {\n    title: data.title,\n    descript: data.description\n  }), __jsx(Comment, {\n    data: data.comment\n  }), __jsx(Form, null)) : __jsx(Loading, {\n    color: \"#1f2738\"\n  }));\n}\n\nexport default Root;","map":null,"metadata":{},"sourceType":"module"}