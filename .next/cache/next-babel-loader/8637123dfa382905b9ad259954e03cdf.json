{"ast":null,"code":"var _jsxFileName = \"C:\\\\test\\\\component\\\\home\\\\addcontent\\\\addPhoto\\\\addphoto.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport Top from './addPhototop';\nimport Content from './addphotolist';\nimport Form from './postform/form';\nimport AddBu from './addbu';\nimport { useRouter } from 'next/router';\nimport Loading from '../../../public/loading';\n\nfunction AddPhoto() {\n  const data = useRouter();\n  const {\n    0: PhotoFiles,\n    1: setPhotoFiles\n  } = useState([]);\n  const {\n    0: fetching,\n    1: setFetching\n  } = useState(false);\n  const fileRef = React.createRef(); // file Dom 定义\n\n  let canvasRef;\n\n  const fileClick = () => {\n    // 添加图片FileDOM 点击事件\n    fileRef.current.click();\n  };\n\n  const uploadPhoto = async e => {\n    e.preventDefault();\n\n    if (PhotoFiles.length < 1) {\n      // 检测是否有照片添加\n      let reming = document.querySelector('.remind');\n      reming.hidden = false;\n      setTimeout(() => reming.hidden = true, 2000);\n      return;\n    } // 添加信息和照片到服务器\n\n\n    const formData = new FormData(e.target);\n    formData.delete('photoFile');\n    let filesPromises = PhotoFiles.map(async photo => {\n      let img = new Image(); //裁减图片1比1。\n\n      img.src = URL.createObjectURL(photo.file);\n      let promise = new Promise(resolve => {\n        img.onload = () => {\n          let {\n            width,\n            height\n          } = img;\n          let size = width > height ? height : width;\n          console.log(size);\n          let count = width > height ? width - size : height - size;\n          let countAr = width > height ? [-count, 0] : [0, -count];\n          console.log(...countAr);\n          canvasRef.width = size;\n          canvasRef.height = size;\n          canvasRef.getContext('2d').drawImage(img, ...countAr);\n          canvasRef.toBlob(blob => {\n            //  const a = document.createElement('a');\n            //  a.href = URL.createObjectURL(blob);\n            //  a.click();   \n            resolve(blob);\n          });\n        };\n      });\n      let blob;\n      await promise.then(result => blob = result);\n      let file = new File([blob], photo.file.name, {\n        type: photo.file.type\n      });\n      return file;\n    }); // let files;\n    // await Promise.all(filesPromises).then( file => files =file);\n    // files.forEach(file =>{\n    //     formData.append('photoFile',file)\n    // });\n    // // if(!data.account) return alert('未获取作者 程序错误');\n    // formData.append('name',name.textContent);\n    // (async () => {\n    //     // setFetching(true);\n    //     let require = await fetch('http://localhost:3001/getphoto/post',\n    //                 {method:'POST',body:formData});\n    //     let res = await require.json();\n    //     if(res)console.log(res)\n    // })() \n  };\n\n  return __jsx(\"div\", {\n    className: \"jsx-2222252425\" + \" \" + 'add-photo',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, !fetching ? __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"jsx-2222252425\" + \" \" + \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, __jsx(Top, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }), __jsx(\"form\", {\n    onSubmit: uploadPhoto,\n    className: \"jsx-2222252425\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, __jsx(Content, {\n    click: fileClick,\n    setPhotoFiles: setPhotoFiles,\n    PhotoFiles: PhotoFiles,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }), PhotoFiles.length > 0 && __jsx(AddBu, {\n    click: fileClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }), __jsx(Form, {\n    ref: fileRef,\n    setFile: setPhotoFiles,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    onClick: e => e.target.hidden = true,\n    hidden: true,\n    className: \"jsx-2222252425\" + \" \" + \"remind\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"\\u8BF7\\u6DFB\\u52A0\\u81F3\\u5C11\\u4E00\\u5F20\\u7167\\u7247\")))), __jsx(\"canvas\", {\n    ref: ref => canvasRef = ref,\n    hidden: true,\n    style: {\n      position: 'fixed',\n      left: 0,\n      top: 0,\n      zIndex: 99\n    },\n    className: \"jsx-2222252425\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  })) : __jsx(Loading, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }), __jsx(_JSXStyle, {\n    id: \"2222252425\",\n    __self: this\n  }, \".add-photo.jsx-2222252425{position:fixed;top:0;left:0;height:100vh;width:100vw;background:#f4f7f9;z-index:10;}.user.jsx-2222252425{position:fixed;top:50%;left:40px;-webkit-transform:translate(0,-50%);-ms-transform:translate(0,-50%);transform:translate(0,-50%);}.container.jsx-2222252425::-webkit-scrollbar{display:none;}.container.jsx-2222252425{height:100%;width:980px;margin:0 auto;background:white;box-shadow:0 0 4px #eee;overflow:auto;padding-bottom:40vh;}.remind.jsx-2222252425{width:90%;height:50px;border-radius:12px;color:white;text-align:center;line-height:50px;font-size:20px;background:red;-webkit-animation:go-jsx-2222252425 .2s;animation:go-jsx-2222252425 .2s;}@-webkit-keyframes go-jsx-2222252425{0%{-webkit-transform:scale(0.8);-ms-transform:scale(0.8);transform:scale(0.8);}100%{-webkit-transform:scale(1);-ms-transform:scale(1);transform:scale(1);}}@keyframes go-jsx-2222252425{0%{-webkit-transform:scale(0.8);-ms-transform:scale(0.8);transform:scale(0.8);}100%{-webkit-transform:scale(1);-ms-transform:scale(1);transform:scale(1);}}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFx0ZXN0XFxjb21wb25lbnRcXGhvbWVcXGFkZGNvbnRlbnRcXGFkZFBob3RvXFxhZGRwaG90by5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUF1R3lCLEFBRytDLEFBU0EsQUFNRixBQUdELEFBU0YsQUFZZSxBQUdGLFVBZFgsRUFUQSxDQUhmLEVBZlMsQUFTRSxNQVJELENBMkJZLENBbEJULENBU0ksSUFqQkQsS0FTZSxLQVNYLEdBakJMLEFBMEJBLFlBekJPLEFBMEJELEVBVE0sY0FxQnZCLEVBWGdCLENBMUJOLEdBa0NWLElBakJhLElBaEJqQixLQTBCa0IsS0FUSyxVQVVMLFVBVGxCLEtBVXFCLFdBdEJyQiw2REF1QkEiLCJmaWxlIjoiQzpcXHRlc3RcXGNvbXBvbmVudFxcaG9tZVxcYWRkY29udGVudFxcYWRkUGhvdG9cXGFkZHBob3RvLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LHt1c2VTdGF0ZX0gZnJvbSAncmVhY3QnXHJcbmltcG9ydCBUb3AgZnJvbSAnLi9hZGRQaG90b3RvcCdcclxuaW1wb3J0IENvbnRlbnQgZnJvbSAnLi9hZGRwaG90b2xpc3QnXHJcbmltcG9ydCBGb3JtIGZyb20gJy4vcG9zdGZvcm0vZm9ybSdcclxuaW1wb3J0IEFkZEJ1IGZyb20gJy4vYWRkYnUnXHJcbmltcG9ydCB7dXNlUm91dGVyfSBmcm9tICduZXh0L3JvdXRlcidcclxuaW1wb3J0IExvYWRpbmcgZnJvbSAnLi4vLi4vLi4vcHVibGljL2xvYWRpbmcnXHJcblxyXG5mdW5jdGlvbiBBZGRQaG90bygpIHtcclxuICAgIGNvbnN0IGRhdGEgPSB1c2VSb3V0ZXIoKTtcclxuICAgIGNvbnN0IFtQaG90b0ZpbGVzLCBzZXRQaG90b0ZpbGVzXSA9IHVzZVN0YXRlKFtdKTtcclxuICAgIGNvbnN0IFtmZXRjaGluZyxzZXRGZXRjaGluZ10gPSB1c2VTdGF0ZShmYWxzZSk7XHJcbiAgICBjb25zdCBmaWxlUmVmID0gUmVhY3QuY3JlYXRlUmVmKCk7IC8vIGZpbGUgRG9tIOWumuS5iVxyXG4gICAgbGV0IGNhbnZhc1JlZjsgXHJcblxyXG4gICAgY29uc3QgZmlsZUNsaWNrID0gKCkgPT4geyAgICAgIC8vIOa3u+WKoOWbvueJh0ZpbGVET00g54K55Ye75LqL5Lu2XHJcbiAgICAgICAgZmlsZVJlZi5jdXJyZW50LmNsaWNrKCk7IFxyXG4gICAgfSBcclxuICAgIGNvbnN0IHVwbG9hZFBob3RvID1hc3luYyAoZSkgPT4ge1xyXG4gICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgICBpZihQaG90b0ZpbGVzLmxlbmd0aDwxKSB7ICAgICAgICAgICAvLyDmo4DmtYvmmK/lkKbmnInnhafniYfmt7vliqBcclxuICAgICAgICAgICAgbGV0IHJlbWluZyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5yZW1pbmQnKTsgICAgICAgICAgICBcclxuICAgICAgICAgICAgcmVtaW5nLmhpZGRlbiA9IGZhbHNlO1xyXG4gICAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHJlbWluZy5oaWRkZW4gPSB0cnVlLDIwMDApO1xyXG4gICAgICAgICAgICByZXR1cm5cclxuICAgICAgICB9ICAgICAgICAgIFxyXG4gICAgICAgICAgICAvLyDmt7vliqDkv6Hmga/lkoznhafniYfliLDmnI3liqHlmahcclxuICAgICAgICBjb25zdCBmb3JtRGF0YSA9IG5ldyBGb3JtRGF0YShlLnRhcmdldCk7XHJcbiAgICAgICAgZm9ybURhdGEuZGVsZXRlKCdwaG90b0ZpbGUnKTtcclxuICAgICAgICBsZXQgZmlsZXNQcm9taXNlcyA9IFBob3RvRmlsZXMubWFwKCBhc3luYyAocGhvdG8pID0+IHsgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgICAgICBsZXQgaW1nID0gbmV3IEltYWdlKCk7ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvL+ijgeWHj+WbvueJhzHmr5Qx44CCXHJcbiAgICAgICAgICAgICAgICAgICAgaW1nLnNyYyA9IFVSTC5jcmVhdGVPYmplY3RVUkwocGhvdG8uZmlsZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgbGV0IHByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpbWcub25sb2FkID0gKCkgPT57XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsZXQge3dpZHRoLGhlaWdodH0gID0gaW1nOyAgICAgICAgICAgICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbGV0IHNpemUgPSB3aWR0aD5oZWlnaHQ/aGVpZ2h0OndpZHRoO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coc2l6ZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsZXQgY291bnQgPSB3aWR0aD5oZWlnaHQ/d2lkdGgtc2l6ZTpoZWlnaHQtc2l6ZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxldCBjb3VudEFyID0gd2lkdGg+aGVpZ2h0P1stY291bnQsMF06WzAsLWNvdW50XTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKC4uLmNvdW50QXIpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FudmFzUmVmLndpZHRoID0gc2l6ZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhbnZhc1JlZi5oZWlnaHQgPSBzaXplOyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FudmFzUmVmLmdldENvbnRleHQoJzJkJykuZHJhd0ltYWdlKGltZywuLi5jb3VudEFyKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhbnZhc1JlZi50b0Jsb2IoYmxvYiA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyAgY29uc3QgYSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2EnKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vICBhLmhyZWYgPSBVUkwuY3JlYXRlT2JqZWN0VVJMKGJsb2IpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gIGEuY2xpY2soKTsgICBcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXNvbHZlKGJsb2IpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9ICBcclxuICAgICAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAgICAgICAgIGxldCBibG9iO1xyXG4gICAgICAgICAgICAgICAgICAgIGF3YWl0IHByb21pc2UudGhlbihyZXN1bHQgPT4gYmxvYiA9IHJlc3VsdCk7XHJcbiAgICAgICAgICAgICAgICAgICAgbGV0IGZpbGUgPSBuZXcgRmlsZShbYmxvYl0scGhvdG8uZmlsZS5uYW1lLHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTpwaG90by5maWxlLnR5cGUsXHJcbiAgICAgICAgICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmlsZTsgICAgICAgICAgICBcclxuICAgICAgICB9KTtcclxuICAgICAgICAvLyBsZXQgZmlsZXM7XHJcbiAgICAgICAgLy8gYXdhaXQgUHJvbWlzZS5hbGwoZmlsZXNQcm9taXNlcykudGhlbiggZmlsZSA9PiBmaWxlcyA9ZmlsZSk7XHJcbiAgICAgICBcclxuICAgICAgICAvLyBmaWxlcy5mb3JFYWNoKGZpbGUgPT57XHJcbiAgICAgICAgLy8gICAgIGZvcm1EYXRhLmFwcGVuZCgncGhvdG9GaWxlJyxmaWxlKVxyXG4gICAgICAgIC8vIH0pO1xyXG4gICAgICAgIFxyXG4gICAgICAgIFxyXG4gICAgICAgIC8vIC8vIGlmKCFkYXRhLmFjY291bnQpIHJldHVybiBhbGVydCgn5pyq6I635Y+W5L2c6ICFIOeoi+W6j+mUmeivrycpO1xyXG4gICAgICAgIC8vIGZvcm1EYXRhLmFwcGVuZCgnbmFtZScsbmFtZS50ZXh0Q29udGVudCk7XHJcbiAgICAgICAgXHJcbiAgICAgIFxyXG4gICAgICAgIC8vIChhc3luYyAoKSA9PiB7XHJcbiAgICAgICAgLy8gICAgIC8vIHNldEZldGNoaW5nKHRydWUpO1xyXG4gICAgICAgIC8vICAgICBsZXQgcmVxdWlyZSA9IGF3YWl0IGZldGNoKCdodHRwOi8vbG9jYWxob3N0OjMwMDEvZ2V0cGhvdG8vcG9zdCcsXHJcbiAgICAgICAgLy8gICAgICAgICAgICAgICAgIHttZXRob2Q6J1BPU1QnLGJvZHk6Zm9ybURhdGF9KTtcclxuICAgICAgICAvLyAgICAgbGV0IHJlcyA9IGF3YWl0IHJlcXVpcmUuanNvbigpO1xyXG4gICAgICAgIC8vICAgICBpZihyZXMpY29uc29sZS5sb2cocmVzKVxyXG4gICAgICAgIC8vIH0pKCkgXHJcbiAgICAgICAgICAgICAgICAgXHJcbiAgICB9XHJcbiAgICByZXR1cm4gKFxyXG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPSdhZGQtcGhvdG8nPlxyXG4gICAgICAgICAgeyFmZXRjaGluZz88PlxyXG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY29udGFpbmVyXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPFRvcC8+XHJcbiAgICAgICAgICAgICAgICAgICAgPGZvcm0gb25TdWJtaXQ9e3VwbG9hZFBob3RvfT5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxDb250ZW50IGNsaWNrPXtmaWxlQ2xpY2t9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2V0UGhvdG9GaWxlcz17c2V0UGhvdG9GaWxlc31cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBQaG90b0ZpbGVzPXtQaG90b0ZpbGVzfS8+XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge1Bob3RvRmlsZXMubGVuZ3RoPjAgJiYgPEFkZEJ1IGNsaWNrPXtmaWxlQ2xpY2t9Lz59XHJcblxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPEZvcm0gcmVmPXtmaWxlUmVmfSBzZXRGaWxlPXtzZXRQaG90b0ZpbGVzfT4gXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJyZW1pbmRcIiBvbkNsaWNrPXsoZSkgPT5lLnRhcmdldC5oaWRkZW4gPSB0cnVlIH0gaGlkZGVuPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg6K+35re75Yqg6Iez5bCR5LiA5byg54Wn54mHXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L0Zvcm0+XHJcbiAgICAgICAgICAgICAgICAgICAgPC9mb3JtPlxyXG4gICAgICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgIDxjYW52YXMgcmVmPXtyZWYgPT4gY2FudmFzUmVmID0gcmVmfSBoaWRkZW4gc3R5bGU9e3twb3NpdGlvbjonZml4ZWQnLGxlZnQ6MCx0b3A6MCx6SW5kZXg6OTl9fT5cclxuICAgICAgICAgICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICAgICAgPC9jYW52YXM+XHJcbiAgICAgICAgICAgICAgICAgPC8+OjxMb2FkaW5nLz59XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICA8c3R5bGUganN4PiB7YFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLmFkZC1waG90byB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcG9zaXRpb246Zml4ZWQ7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdG9wOjA7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGVmdDowO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhlaWdodDoxMDB2aDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aWR0aDoxMDB2dztcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiNmNGY3Zjk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgei1pbmRleDoxMDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC51c2Vye1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBvc2l0aW9uOmZpeGVkO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRvcDo1MCU7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGVmdDo0MHB4O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRyYW5zZm9ybTp0cmFuc2xhdGUoMCwtNTAlKTsgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC5jb250YWluZXI6Oi13ZWJraXQtc2Nyb2xsYmFyIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkaXNwbGF5Om5vbmU7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAuY29udGFpbmVyIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6MTAwJTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aWR0aDo5ODBweDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtYXJnaW46MCBhdXRvO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6d2hpdGU7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYm94LXNoYWRvdzowIDAgNHB4ICNlZWU7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb3ZlcmZsb3c6YXV0bztcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYWRkaW5nLWJvdHRvbTo0MHZoO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLnJlbWluZCB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGg6OTAlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhlaWdodDo1MHB4O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6MTJweDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb2xvcjp3aGl0ZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0ZXh0LWFsaWduOmNlbnRlcjtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsaW5lLWhlaWdodDo1MHB4O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZToyMHB4O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6cmVkO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFuaW1hdGlvbjogZ28gLjJzO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgQGtleWZyYW1lcyBnbyB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgMCUge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0cmFuc2Zvcm06c2NhbGUoMC44KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgMTAwJSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRyYW5zZm9ybTpzY2FsZSgxKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBgfVxyXG4gICAgICAgICAgICA8L3N0eWxlPlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgKVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBBZGRQaG90b1xyXG4iXX0= */\\n/*@ sourceURL=C:\\\\\\\\test\\\\\\\\component\\\\\\\\home\\\\\\\\addcontent\\\\\\\\addPhoto\\\\\\\\addphoto.js */\"));\n}\n\nexport default AddPhoto;","map":{"version":3,"sources":["C:/test/component/home/addcontent/addPhoto/addphoto.js"],"names":["React","useState","Top","Content","Form","AddBu","useRouter","Loading","AddPhoto","data","PhotoFiles","setPhotoFiles","fetching","setFetching","fileRef","createRef","canvasRef","fileClick","current","click","uploadPhoto","e","preventDefault","length","reming","document","querySelector","hidden","setTimeout","formData","FormData","target","delete","filesPromises","map","photo","img","Image","src","URL","createObjectURL","file","promise","Promise","resolve","onload","width","height","size","console","log","count","countAr","getContext","drawImage","toBlob","blob","then","result","File","name","type","ref","position","left","top","zIndex"],"mappings":"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","sourcesContent":["import React,{useState} from 'react'\r\nimport Top from './addPhototop'\r\nimport Content from './addphotolist'\r\nimport Form from './postform/form'\r\nimport AddBu from './addbu'\r\nimport {useRouter} from 'next/router'\r\nimport Loading from '../../../public/loading'\r\n\r\nfunction AddPhoto() {\r\n    const data = useRouter();\r\n    const [PhotoFiles, setPhotoFiles] = useState([]);\r\n    const [fetching,setFetching] = useState(false);\r\n    const fileRef = React.createRef(); // file Dom 定义\r\n    let canvasRef; \r\n\r\n    const fileClick = () => {      // 添加图片FileDOM 点击事件\r\n        fileRef.current.click(); \r\n    } \r\n    const uploadPhoto =async (e) => {\r\n        e.preventDefault();\r\n        if(PhotoFiles.length<1) {           // 检测是否有照片添加\r\n            let reming = document.querySelector('.remind');            \r\n            reming.hidden = false;\r\n            setTimeout(() => reming.hidden = true,2000);\r\n            return\r\n        }          \r\n            // 添加信息和照片到服务器\r\n        const formData = new FormData(e.target);\r\n        formData.delete('photoFile');\r\n        let filesPromises = PhotoFiles.map( async (photo) => {            \r\n                    let img = new Image();                             //裁减图片1比1。\r\n                    img.src = URL.createObjectURL(photo.file);\r\n                    let promise = new Promise((resolve) => {\r\n                        img.onload = () =>{\r\n                            let {width,height}  = img;                           \r\n                            let size = width>height?height:width;\r\n                            console.log(size);\r\n                            let count = width>height?width-size:height-size;\r\n                            let countAr = width>height?[-count,0]:[0,-count];\r\n                            console.log(...countAr);\r\n                            canvasRef.width = size;\r\n                            canvasRef.height = size;                                                \r\n                            canvasRef.getContext('2d').drawImage(img,...countAr);\r\n                            canvasRef.toBlob(blob => {\r\n                            //  const a = document.createElement('a');\r\n                            //  a.href = URL.createObjectURL(blob);\r\n                            //  a.click();   \r\n                             resolve(blob)\r\n                            })\r\n                        }  \r\n                    })\r\n                    let blob;\r\n                    await promise.then(result => blob = result);\r\n                    let file = new File([blob],photo.file.name,{\r\n                        type:photo.file.type,\r\n                    })\r\n                    return file;            \r\n        });\r\n        // let files;\r\n        // await Promise.all(filesPromises).then( file => files =file);\r\n       \r\n        // files.forEach(file =>{\r\n        //     formData.append('photoFile',file)\r\n        // });\r\n        \r\n        \r\n        // // if(!data.account) return alert('未获取作者 程序错误');\r\n        // formData.append('name',name.textContent);\r\n        \r\n      \r\n        // (async () => {\r\n        //     // setFetching(true);\r\n        //     let require = await fetch('http://localhost:3001/getphoto/post',\r\n        //                 {method:'POST',body:formData});\r\n        //     let res = await require.json();\r\n        //     if(res)console.log(res)\r\n        // })() \r\n                 \r\n    }\r\n    return (\r\n        <div className='add-photo'>\r\n          {!fetching?<>\r\n                    <div className=\"container\">\r\n                    <Top/>\r\n                    <form onSubmit={uploadPhoto}>\r\n                            <Content click={fileClick}\r\n                                setPhotoFiles={setPhotoFiles}\r\n                                PhotoFiles={PhotoFiles}/>\r\n\r\n                            {PhotoFiles.length>0 && <AddBu click={fileClick}/>}\r\n\r\n                            <Form ref={fileRef} setFile={setPhotoFiles}> \r\n                                <div className=\"remind\" onClick={(e) =>e.target.hidden = true } hidden>\r\n                                        请添加至少一张照片\r\n                                </div>\r\n                            </Form>\r\n                    </form>\r\n                    </div>\r\n                    <canvas ref={ref => canvasRef = ref} hidden style={{position:'fixed',left:0,top:0,zIndex:99}}>\r\n                        \r\n                    </canvas>\r\n                 </>:<Loading/>}\r\n            \r\n            <style jsx> {`\r\n                            .add-photo {\r\n                                position:fixed;\r\n                                top:0;\r\n                                left:0;\r\n                                height:100vh;\r\n                                width:100vw;\r\n                                background:#f4f7f9;\r\n                                z-index:10;\r\n                            }\r\n                            .user{\r\n                                position:fixed;\r\n                                top:50%;\r\n                                left:40px;\r\n                                transform:translate(0,-50%);                                                                                                \r\n                            }\r\n                            .container::-webkit-scrollbar {\r\n                                display:none;\r\n                            }\r\n                            .container {\r\n                                height:100%;\r\n                                width:980px;\r\n                                margin:0 auto;\r\n                                background:white;\r\n                                box-shadow:0 0 4px #eee;\r\n                                overflow:auto;\r\n                                padding-bottom:40vh;\r\n                            }\r\n                            .remind {\r\n                                width:90%;\r\n                                height:50px;\r\n                                border-radius:12px;\r\n                                color:white;\r\n                                text-align:center;\r\n                                line-height:50px;\r\n                                font-size:20px;\r\n                                background:red;\r\n                                animation: go .2s;\r\n                            }\r\n                            @keyframes go {\r\n                                0% {\r\n                                    transform:scale(0.8);\r\n                                }\r\n                                100% {\r\n                                    transform:scale(1);\r\n                                }\r\n                            }\r\n                            `}\r\n            </style>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddPhoto\r\n"]},"metadata":{},"sourceType":"module"}